# Categories per channel
categories:
    "et": ["ggh", "qqh", "ztt", "zll", "w", "tt", "ss", "misc", "inclusive"] # be careful with ordering as NN categories are accessed via index!!!
    "mt": ["ggh", "qqh", "ztt", "zll", "w", "tt", "ss", "misc", "inclusive"]
    "tt": [
            "tt1_ggh", "tt1_qqh", "tt1_ztt", "tt1_noniso", "tt1_misc", "inclusive",
            "tt2_ggh", "tt2_qqh", "tt2_ztt", "tt2_noniso", "tt2_misc", "inclusive"
        ]

# Options for the binning of the fractions
fraction_binning:
    mt_1_puppi:
        et:
          bins: [0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100,105,110,115,120,125,130,135,140,145,150,155,160]
          expression: "mt_1_puppi"
        mt:
          bins: [0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100,105,110,115,120,125,130,135,140,145,150,155,160]
          expression: "mt_1_puppi"
        tt:
          bins: [0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100,105,110,115,120,125,130,135,140,145,150,155,160]
          expression: "mt_1_puppi"

    m_vis:
        et:
            expression: "m_vis"
            binning: [0, 20, 40, 60, 80, 100, 120, 140, 160, 180, 200]
        mt:
            expression: "m_vis"
            binning: [0, 20, 40, 60, 80, 100, 120, 140, 160, 180, 200]
        tt:
            expression: "m_vis"
            binning: [0, 20, 40, 60, 80, 100, 120, 140, 160, 180, 200]
    NN_score:
        et:
            expression: "et_max_score"
            binning: [0.2, 0.4, 0.6, 1.0]
        mt:
            expression: "mt_max_score"
            binning: [0.2, 0.4, 0.6, 1.0]
        tt:
            expression: "tt_max_score"
            binning: [0.2, 0.4, 0.6, 1.0]
    njets_mvis:
        et:
            expression: "(300*min(njets, 2)+min(290, m_vis))"
            binning: [0, 50, 80, 100, 110, 120, 130, 150, 170, 200, 250, 300, 350, 380, 400, 410, 420, 430, 450, 470, 500, 550, 600, 650, 680, 700, 710, 720, 730, 750, 770, 800, 850, 900]
        mt:
            expression: "(300*min(njets, 2)+min(290, m_vis))"
            binning: [0, 50, 80, 100, 110, 120, 130, 150, 170, 200, 250, 300, 350, 380, 400, 410, 420, 430, 450, 470, 500, 550, 600, 650, 680, 700, 710, 720, 730, 750, 770, 800, 850, 900]
        tt:
            expression: "(300*min(njets, 2)+min(290, m_vis))"
            binning: [0, 50, 80, 100, 110, 120, 130, 150, 170, 200, 250, 300, 350, 380, 400, 410, 420, 430, 450, 470, 500, 550, 600, 650, 680, 700, 710, 720, 730, 750, 770, 800, 850, 900]

    njets2bins_m_vis:
        et:
            expression: "(300*min(njets, 1)+min(290, m_vis))"
            bins: [0, 30, 45, 60, 75, 90, 105, 120, 140, 160, 200, 225, 250, 300, 330, 345, 360, 375, 390, 405, 420, 440, 460, 500, 525, 550, 600]

        mt:
            expression: "(300*min(njets, 1)+min(290, m_vis))"
            bins: [0, 30, 45, 60, 75, 90, 105, 120, 140, 160, 200, 225, 250, 300, 330, 345, 360, 375, 390, 405, 420, 440, 460, 500, 525, 550, 600]

        tt:
            expression: "(250*min(njets, 1)+min(240,m_vis))"
            bins: [0, 10, 20,30,40,50,60,70,80,90,100,110,120,130,140,150,160,170,180,190,200,210,220,230,240,250,260,270,280,290,300,310,320,330,340,350,360,370,380,390,400,410,420,430,440,450,460,470,480,490,500]

    nbtag3bins_mt_1_puppi:
        et:
            expression: "(180*min(nbtag, 2)+min(160,mt_1_puppi))"
            bins: [0, 10, 20,30,40,50,60,70,80,90,100,110,120,130,140,150,160,170,180,190,200,210,220,230,240,250,260,270,280,290,300,310,320,330,340,350,360,370,380,390,400,410,420,430,440,450,460,470,480,490,500,510,520]
        mt:
            expression: "(180*min(nbtag, 2)+min(160,mt_1_puppi))"
            bins: [0, 10, 20,30,40,50,60,70,80,90,100,110,120,130,140,150,160,170,180,190,200,210,220,230,240,250,260,270,280,290,300,310,320,330,340,350,360,370,380,390,400,410,420,430,440,450,460,470,480,490,500,510,520]

    nbtag3bins_m_vis:
        tt:
            expression: "(250*min(nbtag, 2)+min(240,m_vis))"
            bins: [0, 10, 20,30,40,50,60,70,80,90,100,110,120,130,140,150,160,170,180,190,200,210,220,230,240,250,260,270,280,290,300,310,320,330,340,350,360,370,380,390,400,410,420,430,440,450,460,470,480,490,500,510,520,530,540,550,560,570,580,590,600,610,620,630,640,650,660,670,680,690,700,710,720,730,740,750]
        et:
            expression: "(300*min(nbtag, 2)+min(290, m_vis))"
            bins: [0, 15, 30, 45, 60, 75, 90, 105, 120, 140, 160, 200, 225, 250, 300, 315, 330, 345, 360, 375, 390, 405, 420, 440, 460, 500, 525, 550, 600, 615, 630, 645, 660, 675, 690, 705, 720, 740, 760, 800, 825, 850, 900]
        mt:
            expression: "(300*min(nbtag, 2)+min(290, m_vis))"
            bins: [0, 15, 30, 45, 60, 75, 90, 105, 120, 140, 160, 200, 225, 250, 300, 315, 330, 345, 360, 375, 390, 405, 420, 440, 460, 500, 525, 550, 600, 615, 630, 645, 660, 675, 690, 705, 720, 740, 760, 800, 825, 850, 900]

    njets3bins_mt_1_puppi:
        et:
            expression: "(180*min(njets, 2)+min(160,mt_1_puppi))"
            bins: [0, 10, 20,30,40,50,60,70,80,90,100,110,120,130,140,150,160,170,180,190,200,210,220,230,240,250,260,270,280,290,300,310,320,330,340,350,360,370,380,390,400,410,420,430,440,450,460,470,480,490,500,510,520]
        mt:
            expression: "(180*min(njets, 2)+min(160,mt_1_puppi))"
            bins: [0, 10, 20,30,40,50,60,70,80,90,100,110,120,130,140,150,160,170,180,190,200,210,220,230,240,250,260,270,280,290,300,310,320,330,340,350,360,370,380,390,400,410,420,430,440,450,460,470,480,490,500,510,520]

    njets3bins_m_vis:
        tt:
            expression: "(250*min(njets, 2)+min(240,m_vis))"
            bins: [0, 10, 20,30,40,50,60,70,80,90,100,110,120,130,140,150,160,170,180,190,200,210,220,230,240,250,260,270,280,290,300,310,320,330,340,350,360,370,380,390,400,410,420,430,440,450,460,470,480,490,500,510,520,530,540,550,560,570,580,590,600,610,620,630,640,650,660,670,680,690,700,710,720,730,740,750]
        et:
            expression: "(300*min(njets, 2)+min(290, m_vis))"
            bins: [0, 15, 30, 45, 60, 75, 90, 105, 120, 140, 160, 200, 225, 250, 300, 315, 330, 345, 360, 375, 390, 405, 420, 440, 460, 500, 525, 550, 600, 615, 630, 645, 660, 675, 690, 705, 720, 740, 760, 800, 825, 850, 900]
        mt:
            expression: "(300*min(njets, 2)+min(290, m_vis))"
            bins: [0, 15, 30, 45, 60, 75, 90, 105, 120, 140, 160, 200, 225, 250, 300, 315, 330, 345, 360, 375, 390, 405, 420, 440, 460, 500, 525, 550, 600, 615, 630, 645, 660, 675, 690, 705, 720, 740, 760, 800, 825, 850, 900]

    njets2bins_mt_1_puppi:
        mt:
            expression: "(180*min(njets, 1)+min(160,mt_1_puppi))"
            bins: [0, 10, 20,30,40,50,60,70,80,90,100,110,120,130,140,150,160,170,180,190,200,210,220,230,240,250,260,270,280,290,300,310,320,330,340]
        et:
            expression: "(180*min(njets, 1)+min(160,mt_1_puppi))"
            bins: [0, 10, 20,30,40,50,60,70,80,90,100,110,120,130,140,150,160,170,180,190,200,210,220,230,240,250,260,270,280,290,300,310,320,330,340]
