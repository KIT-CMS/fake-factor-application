# Categories per channel
categories:
    "et": ["ggh", "qqh", "ztt", "zll", "w", "tt", "ss", "misc", "inclusive"] # be careful with ordering as NN categories are accessed via index!!!
    "mt": ["ggh", "qqh", "ztt", "zll", "w", "tt", "ss", "misc", "inclusive"]
    "tt": [
            "tt1_ggh", "tt1_qqh", "tt1_ztt", "tt1_noniso", "tt1_misc", "tt1_inclusive",
            "tt2_ggh", "tt2_qqh", "tt2_ztt", "tt2_noniso", "tt2_misc", "tt2_inclusive"
        ]

# Options for the binning of the fractions
fraction_binning:
    mt_1_puppi:
        et:
          bins: [0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100,105,110,115,120,125,130,135,140,145,150,155,160]
          expression: "mt_1_puppi"
        mt:
          bins: [0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100,105,110,115,120,125,130,135,140,145,150,155,160]
          expression: "mt_1_puppi"
        tt:
          bins: [0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100,105,110,115,120,125,130,135,140,145,150,155,160]
          expression: "mt_1_puppi"

    m_vis:
        et:
            expression: "m_vis"
            binning: [0, 20, 40, 60, 80, 100, 120, 140, 160, 180, 200]
        mt:
            expression: "m_vis"
            binning: [0, 20, 40, 60, 80, 100, 120, 140, 160, 180, 200]
        tt:
            expression: "m_vis"
            binning: [0, 20, 40, 60, 80, 100, 120, 140, 160, 180, 200]
    NN_score:
        et:
            expression: "et_max_score"
            binning: [0.2, 0.4, 0.6, 1.0]
        mt:
            expression: "mt_max_score"
            binning: [0.2, 0.4, 0.6, 1.0]
        tt:
            expression: "tt_max_score"
            binning: [0.2, 0.4, 0.6, 1.0]
    njets_mvis:
        et:
            expression: "(300*min(njets, 2)+min(290, m_vis))"
            binning: [0, 50, 80, 100, 110, 120, 130, 150, 170, 200, 250, 300, 350, 380, 400, 410, 420, 430, 450, 470, 500, 550, 600, 650, 680, 700, 710, 720, 730, 750, 770, 800, 850, 900]
        mt:
            expression: "(300*min(njets, 2)+min(290, m_vis))"
            binning: [0, 50, 80, 100, 110, 120, 130, 150, 170, 200, 250, 300, 350, 380, 400, 410, 420, 430, 450, 470, 500, 550, 600, 650, 680, 700, 710, 720, 730, 750, 770, 800, 850, 900]
        tt:
            expression: "(300*min(njets, 2)+min(290, m_vis))"
            binning: [0, 50, 80, 100, 110, 120, 130, 150, 170, 200, 250, 300, 350, 380, 400, 410, 420, 430, 450, 470, 500, 550, 600, 650, 680, 700, 710, 720, 730, 750, 770, 800, 850, 900]

    njets2bins_mvis:
        et:
            expression: "(300*min(njets, 1)+min(290, m_vis))"
            bins: [0, 15, 30, 45, 60, 75, 90, 105, 120, 140, 160, 200, 225, 250, 300, 315, 330, 345, 360, 375, 390, 405, 420, 440, 460, 500, 525, 550, 600]

        mt:
            expression: "(300*min(njets, 1)+min(290, m_vis))"
            bins: [0, 15, 30, 45, 60, 75, 90, 105, 120, 140, 160, 200, 225, 250, 300, 315, 330, 345, 360, 375, 390, 405, 420, 440, 460, 500, 525, 550, 600]

        tt:
            expression: "(300*min(njets, 1)+min(290, m_vis))"
            bins: [0, 15, 30, 45, 60, 75, 90, 105, 120, 140, 160, 200, 225, 250, 300, 315, 330, 345, 360, 375, 390, 405, 420, 440, 460, 500, 525, 550, 600]

    njets3bins_mvis:
        et:
            expression: "(300*min(njets, 2)+min(290, m_vis))"
            bins: [0, 15, 30, 45, 60, 75, 90, 105, 120, 140, 160, 200, 225, 250, 300, 315, 330, 345, 360, 375, 390, 405, 420, 440, 460, 500, 525, 550, 600, 615, 630, 645, 660, 675, 690, 705, 720, 740, 760, 800, 825, 850, 900]
        mt:
            expression: "(300*min(njets, 2)+min(290, m_vis))"
            bins: [0, 15, 30, 45, 60, 75, 90, 105, 120, 140, 160, 200, 225, 250, 300, 315, 330, 345, 360, 375, 390, 405, 420, 440, 460, 500, 525, 550, 600, 615, 630, 645, 660, 675, 690, 705, 720, 740, 760, 800, 825, 850, 900]
        tt:
            expression: "(300*min(njets, 2)+min(290, m_vis))"
            bins: [0, 15, 30, 45, 60, 75, 90, 105, 120, 140, 160, 200, 225, 250, 300, 315, 330, 345, 360, 375, 390, 405, 420, 440, 460, 500, 525, 550, 600, 615, 630, 645, 660, 675, 690, 705, 720, 740, 760, 800, 825, 850, 900]

    njets2bins_mt_1_puppi:
        et:
            expression: "(160*min(njets, 1)+min(157, mt_1_puppi))"
            bins: [0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100, 105, 110, 115, 120, 125, 130, 135, 140, 145, 150, 155, 160, 165, 170, 175, 180, 185, 190, 195, 200, 205, 210, 215, 220, 225, 230, 235, 240, 245, 250, 255, 260, 265, 270, 275, 280, 285, 290, 295, 300, 305, 310, 315, 320]

        mt:
            expression: "(160*min(njets, 1)+min(157, mt_1_puppi))"
            bins: [0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100, 105, 110, 115, 120, 125, 130, 135, 140, 145, 150, 155, 160, 165, 170, 175, 180, 185, 190, 195, 200, 205, 210, 215, 220, 225, 230, 235, 240, 245, 250, 255, 260, 265, 270, 275, 280, 285, 290, 295, 300, 305, 310, 315, 320]

        tt:
            expression: "(160*min(njets, 1)+min(157, mt_1_puppi))"
            bins: [0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100, 105, 110, 115, 120, 125, 130, 135, 140, 145, 150, 155, 160, 165, 170, 175, 180, 185, 190, 195, 200, 205, 210, 215, 220, 225, 230, 235, 240, 245, 250, 255, 260, 265, 270, 275, 280, 285, 290, 295, 300, 305, 310, 315, 320]

